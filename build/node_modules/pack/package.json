{
  "name": "pack",
  "description": "Minify, obfuscate and encrypt node modules",
  "version": "0.2.7",
  "homepage": "http://github.com/chriso/packnode",
  "keywords": [
    "pack",
    "packnode",
    "encrypt",
    "compress",
    "unpack",
    "yui",
    "obfuscate",
    "compressor",
    "closure",
    "jsmin"
  ],
  "author": {
    "name": "Chris O'Hara",
    "email": "cohara87@gmail.com"
  },
  "main": "./lib",
  "directories": {
    "lib": "./lib"
  },
  "bugs": {
    "mail": "cohara87@gmail.com",
    "url": "http://github.com/chriso/packnode/issues"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/chriso/packnode.git"
  },
  "dependencies": {
    "uglify-js": ">= 0.0.1"
  },
  "engines": {
    "node": ">=0.2.5"
  },
  "bin": {
    "packnode": "./bin/packnode"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://github.com/chriso/packnode/raw/master/LICENSE"
    }
  ],
  "readme": "**packnode minifies, obfuscates and/or encrypts node modules for private use.**\n\nTo install packnode, use [npm](http://github.com/isaacs/npm)\n\n    $ npm install pack\n\n## Packing a module\n    \nTo compress and obfuscate `myscript.js` using [uglifyjs](https://github.com/mishoo/UglifyJS), run\n\n    $ cat myscript.js | packnode > packed.js\n    \nTo encrypt `myscript.js` using the password `pass123`, run\n\n    $ cat myscript.js | packnode pass123 > packed.js\n    \nEncrypted modules can be accessed by calling \n\n    require(packed_file).unpack(password);\n    \n## Example\n\nThe following example was packed using\n\n    $ packnode pass123 < hello1.js > hello2.js\n\n*hello1.js*\n\n    exports.world = function () {\n        console.log('Hello world!');\n    };\n\n*hello2.js*\n\n    e=\"5b3be6d94448754b6d8484a78b5f30d7a2c2598105d0e225166a0132bef8b1cba74422cb32a08289d092e331652e403f4c3239716c3fd1d4605156d9ebb8781e\";\n    exports.unpack=function(p){var d=require(\"crypto\").createDecipher(\"aes256\",p);eval(d.update(e,\"hex\",\"utf8\")+d.final(\"utf8\"));return exports}\n\nBoth are equivalent\n\n    require('./hello1').world();                    //Outputs 'Hello world!'\n    \n    require('./hello2').unpack('pass123').world();  //Outputs 'Hello world!'\n\n## Advanced\n\nCoffeeScript modules can be packed using\n    \n    $ cat myscript.coffee | coffee -c -s | packnode pass123 > packed.js\n    \nTo specify a custom encryption algorithm or output encoding, use `-a` and `-e`\n\n    $ packnode -a aes256 -e hex < myscript.js > packed.js\n    \n[node.io](http://node.io) has built-in support for unpacking encrypted modules.\n\nTo run an encrypted job, use the `-u` switch to specify the password\n\n    $ node.io -u pass123 myjob",
  "readmeFilename": "README.md",
  "_id": "pack@0.2.7",
  "_from": "pack@"
}
